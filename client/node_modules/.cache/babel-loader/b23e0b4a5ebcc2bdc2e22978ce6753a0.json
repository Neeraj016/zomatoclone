{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // Redux types\n\nimport { GET_FOOD_LIST, GET_FOOD } from \"./Food.type\";\nexport var getFood = function getFood(foodId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var Food;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/food/\".concat(foodId)\n              });\n\n            case 3:\n              Food = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: GET_FOOD,\n                payload: Food.data\n              }));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getFoodList = function getFoodList(menuId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var Menu;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/menu/list/\".concat(menuId)\n              });\n\n            case 3:\n              Menu = _context2.sent;\n              return _context2.abrupt(\"return\", dispatch({\n                type: GET_FOOD_LIST,\n                payload: Menu.data\n              }));\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context2.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Redux/Reducer/Food/Food.action.js"],"names":["axios","GET_FOOD_LIST","GET_FOOD","getFood","foodId","dispatch","method","url","Food","type","payload","data","getFoodList","menuId","Menu"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,aAAxC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEZL,KAAK,CAAC;AACvBM,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG,uCAAgCH,MAAhC;AAFoB,eAAD,CAFO;;AAAA;AAEzBI,cAAAA,IAFyB;AAAA,+CAOxBH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAEP,QAAR;AAAkBQ,gBAAAA,OAAO,EAAEF,IAAI,CAACG;AAAhC,eAAD,CAPgB;;AAAA;AAAA;AAAA;AAAA,+CASxBN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAaP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD;AAAA;AAAA,yEAAY,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhBL,KAAK,CAAC;AACvBM,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG,4CAAqCM,MAArC;AAFoB,eAAD,CAFW;;AAAA;AAE7BC,cAAAA,IAF6B;AAAA,gDAO5BT,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAER,aAAR;AAAuBS,gBAAAA,OAAO,EAAEI,IAAI,CAACH;AAArC,eAAD,CAPoB;;AAAA;AAAA;AAAA;AAAA,gDAS5BN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CAToB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import axios from \"axios\";\n\n// Redux types\nimport { GET_FOOD_LIST, GET_FOOD } from \"./Food.type\";\n\nexport const getFood = (foodId) => async (dispatch) => {\n  try {\n    const Food = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/food/${foodId}`,\n    });\n\n    return dispatch({ type: GET_FOOD, payload: Food.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};\n\nexport const getFoodList = (menuId) => async (dispatch) => {\n  try {\n    const Menu = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/menu/list/${menuId}`,\n    });\n\n    return dispatch({ type: GET_FOOD_LIST, payload: Menu.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};"]},"metadata":{},"sourceType":"module"}