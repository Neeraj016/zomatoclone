{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // Redux types\n\nimport { GET_USER, SELF, CLEAR_USER } from \"./user.type\";\nexport var getUser = function getUser(_id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var User;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/user/\".concat(_id)\n              });\n\n            case 3:\n              User = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: GET_USER,\n                payload: User.data\n              }));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getMyself = function getMyself() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var User;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/user/\"\n              });\n\n            case 3:\n              User = _context2.sent;\n              return _context2.abrupt(\"return\", dispatch({\n                type: SELF,\n                payload: User.data\n              }));\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context2.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var clearUser = function clearUser() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              return _context3.abrupt(\"return\", dispatch({\n                type: CLEAR_USER,\n                payload: {}\n              }));\n\n            case 4:\n              _context3.prev = 4;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context3.t0\n              }));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 4]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Redux/Reducer/User/user.action.js"],"names":["axios","GET_USER","SELF","CLEAR_USER","getUser","_id","dispatch","method","url","User","type","payload","data","getMyself","clearUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,aAA3C;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA;AAAA,wEAAS,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAETN,KAAK,CAAC;AACvBO,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG,uCAAgCH,GAAhC;AAFoB,eAAD,CAFI;;AAAA;AAEtBI,cAAAA,IAFsB;AAAA,+CAOrBH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAET,QAAR;AAAkBU,gBAAAA,OAAO,EAAEF,IAAI,CAACG;AAAhC,eAAD,CAPa;;AAAA;AAAA;AAAA;AAAA,+CASrBN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAYP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA,yEAAM,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAERN,KAAK,CAAC;AACvBO,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG;AAFoB,eAAD,CAFG;;AAAA;AAErBC,cAAAA,IAFqB;AAAA,gDAOpBH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAER,IAAR;AAAcS,gBAAAA,OAAO,EAAEF,IAAI,CAACG;AAA5B,eAAD,CAPY;;AAAA;AAAA;AAAA;AAAA,gDASpBN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAYP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA,yEAAM,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEpBA,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAEP,UAAR;AAAoBQ,gBAAAA,OAAO,EAAE;AAA7B,eAAD,CAFY;;AAAA;AAAA;AAAA;AAAA,gDAIpBL,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CAJY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import axios from \"axios\";\n\n// Redux types\nimport { GET_USER, SELF, CLEAR_USER } from \"./user.type\";\n\nexport const getUser = (_id) => async (dispatch) => {\n  try {\n    const User = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/user/${_id}`,\n    });\n\n    return dispatch({ type: GET_USER, payload: User.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};\nexport const getMyself = () => async (dispatch) => {\n  try {\n    const User = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/user/`,\n    });\n\n    return dispatch({ type: SELF, payload: User.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};\nexport const clearUser = () => async (dispatch) => {\n  try {\n    return dispatch({ type: CLEAR_USER, payload: {} });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};"]},"metadata":{},"sourceType":"module"}