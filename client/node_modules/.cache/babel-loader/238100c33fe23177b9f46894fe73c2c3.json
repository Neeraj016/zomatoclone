{"ast":null,"code":"import _slicedToArray from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Page/Restaurant/Photos.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ImageViewer from \"react-simple-image-viewer\"; // components\n\nimport PhotoCollection from \"../../Components/restaurant/PhotosCollection\"; // redux actions\n\nimport { getImage } from \"../../Redux/Reducer/Image/Image.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Photos = function Photos() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMenuOpen = _useState4[0],\n      setIsMenuOpen = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CurrentImg = _useState6[0],\n      setCurrentImg = _useState6[1];\n\n  var reduxState = useSelector(function (globalStore) {\n    return globalStore.restaurant.selectedRestaurant.restaurant;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (reduxState) {\n      dispatch(getImage(reduxState === null || reduxState === void 0 ? void 0 : reduxState.photos)).then(function (data) {\n        var images = [];\n        data.payload.image.images.map(function (_ref) {\n          var location = _ref.location;\n          return images.push(location);\n        });\n        setPhotos(images);\n      });\n    }\n  }, []);\n\n  var closeViewer = function closeViewer() {\n    return setIsMenuOpen(false);\n  };\n\n  var openViewer = function openViewer() {\n    return setIsMenuOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMenuOpen && /*#__PURE__*/_jsxDEV(ImageViewer, {\n      src: photos,\n      currentIndex: CurrentImg,\n      disableScroll: false,\n      onClose: closeViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2\",\n      children: photos.map(function (photo) {\n        return /*#__PURE__*/_jsxDEV(PhotoCollection, {\n          image: photo,\n          openViewer: openViewer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Photos, \"RsIHSpJs+surTQ3nQH6HnVxYYXo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Photos;\nexport default Photos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Page/Restaurant/Photos.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","ImageViewer","PhotoCollection","getImage","Photos","photos","setPhotos","isMenuOpen","setIsMenuOpen","CurrentImg","setCurrentImg","reduxState","globalStore","restaurant","selectedRestaurant","dispatch","then","data","images","payload","image","map","location","push","closeViewer","openViewer","photo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,8CAA5B,C,CACA;;AACA,SAASC,QAAT,QAAyB,wCAAzB;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,kBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoCT,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOU,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAoCX,QAAQ,CAAC,CAAD,CAA5C;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,UAAU,GAAGZ,WAAW,CAC5B,UAACa,WAAD;AAAA,WAAiBA,WAAW,CAACC,UAAZ,CAAuBC,kBAAvB,CAA0CD,UAA3D;AAAA,GAD4B,CAA9B;AAGA,MAAME,QAAQ,GAAGf,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,UAAJ,EAAgB;AACdI,MAAAA,QAAQ,CAACZ,QAAQ,CAACQ,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEN,MAAb,CAAT,CAAR,CAAuCW,IAAvC,CAA4C,UAACC,IAAD,EAAU;AACpD,YAAMC,MAAM,GAAG,EAAf;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaC,KAAb,CAAmBF,MAAnB,CAA0BG,GAA1B,CAA8B;AAAA,cAAGC,QAAH,QAAGA,QAAH;AAAA,iBAAkBJ,MAAM,CAACK,IAAP,CAAYD,QAAZ,CAAlB;AAAA,SAA9B;AACAhB,QAAAA,SAAS,CAACY,MAAD,CAAT;AACD,OAJD;AAKD;AACF,GARQ,EAQN,EARM,CAAT;;AASA,MAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMhB,aAAa,CAAC,KAAD,CAAnB;AAAA,GAApB;;AAEA,MAAMiB,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMjB,aAAa,CAAC,IAAD,CAAnB;AAAA,GAAnB;;AAEA,sBACE;AAAA,eACGD,UAAU,iBACT,QAAC,WAAD;AACE,MAAA,GAAG,EAAEF,MADP;AAEE,MAAA,YAAY,EAAEI,UAFhB;AAGE,MAAA,aAAa,EAAE,KAHjB;AAIE,MAAA,OAAO,EAAEe;AAJX;AAAA;AAAA;AAAA;AAAA,aAFJ,eAUE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGnB,MAAM,CAACgB,GAAP,CAAW,UAACK,KAAD;AAAA,4BACV,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAEA,KAAxB;AAA+B,UAAA,UAAU,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX;AADH;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA,kBADF;AAkBD,CAzCD;;GAAMrB,M;UAKeL,W,EAGFC,W;;;KARbI,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ImageViewer from \"react-simple-image-viewer\";\n\n// components\nimport PhotoCollection from \"../../Components/restaurant/PhotosCollection\";\n// redux actions\nimport { getImage } from \"../../Redux/Reducer/Image/Image.action\";\n\nconst Photos = () => {\n  const [photos, setPhotos] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [CurrentImg, setCurrentImg] = useState(0);\n\n  const reduxState = useSelector(\n    (globalStore) => globalStore.restaurant.selectedRestaurant.restaurant\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (reduxState) {\n      dispatch(getImage(reduxState?.photos)).then((data) => {\n        const images = [];\n        data.payload.image.images.map(({ location }) => images.push(location));\n        setPhotos(images);\n      });\n    }\n  }, []);\n  const closeViewer = () => setIsMenuOpen(false);\n\n  const openViewer = () => setIsMenuOpen(true);\n\n  return (\n    <>\n      {isMenuOpen && (\n        <ImageViewer\n          src={photos}\n          currentIndex={CurrentImg}\n          disableScroll={false}\n          onClose={closeViewer}\n        />\n      )}\n\n      <div className=\"flex flex-wrap gap-2\">\n        {photos.map((photo) => (\n          <PhotoCollection image={photo} openViewer={openViewer} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}