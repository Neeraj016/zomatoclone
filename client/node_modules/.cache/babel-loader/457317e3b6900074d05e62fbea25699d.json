{"ast":null,"code":"var md5 = require('blueimp-md5'),\n    querystring = require('querystring'),\n    MD5_REGEX = /^[0-9a-f]{32}$/;\n\nfunction params(options) {\n  var params = {},\n      removing = {\n    protocol: 1,\n    format: 1\n  };\n\n  for (var key in options) {\n    if (!removing[key]) params[key] = options[key];\n  }\n\n  return params;\n}\n\nfunction proto(options, protocol) {\n  if (!options) return;\n  if (typeof options.protocol === 'boolean') return options.protocol;\n  return options.protocol === \"http\" ? false : options.protocol === \"https\" ? true : undefined;\n}\n\nfunction getHash(email) {\n  email = typeof email === 'string' ? email.trim().toLowerCase() : 'unspecified';\n  return email.match(MD5_REGEX) ? email : md5(email);\n}\n\nfunction getQueryString(options) {\n  var queryData = querystring.stringify(params(options));\n  return queryData && \"?\" + queryData || \"\";\n}\n\nvar gravatar = module.exports = {\n  url: function url(email, options, protocol) {\n    var baseURL = \"//www.gravatar.com/avatar/\";\n\n    if (options && options.cdn) {\n      baseURL = options.cdn + '/avatar/';\n      delete options.cdn;\n    } else {\n      if (options && options.protocol) protocol = proto(options);\n\n      if (typeof protocol !== 'undefined') {\n        baseURL = protocol ? \"https://s.gravatar.com/avatar/\" : 'http://www.gravatar.com/avatar/';\n      }\n    }\n\n    var query = getQueryString(options);\n    return baseURL + getHash(email) + query;\n  },\n  profile_url: function profile_url(email, options, https) {\n    var format = options != undefined && options.format != undefined ? String(options.format) : 'json';\n    var baseURL;\n\n    if (options && options.cdn) {\n      baseURL = options.cdn + '/';\n      delete options.cdn;\n    } else {\n      if (options && options.protocol) https = proto(options);\n      var baseURL = https && \"https://secure.gravatar.com/\" || 'http://www.gravatar.com/';\n    }\n\n    var query = getQueryString(options);\n    return baseURL + getHash(email) + '.' + format + query;\n  }\n};","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/gravatar/lib/gravatar.js"],"names":["md5","require","querystring","MD5_REGEX","params","options","removing","protocol","format","key","proto","undefined","getHash","email","trim","toLowerCase","match","getQueryString","queryData","stringify","gravatar","module","exports","url","baseURL","cdn","query","profile_url","https","String"],"mappings":"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","sourcesContent":["var md5 = require('blueimp-md5'),\n    querystring = require('querystring'),\n    MD5_REGEX = /^[0-9a-f]{32}$/;\n\nfunction params(options) {\n  var params = {}, removing = {protocol:1, format:1};\n  for (var key in options) {\n    if (!removing[key]) params[key] = options[key];\n  }\n  return params;\n}\nfunction proto(options, protocol) {\n  if (!options) return;\n  if(typeof options.protocol === 'boolean') return options.protocol;\n  return options.protocol === \"http\" ? false\n       : options.protocol === \"https\" ? true\n       : undefined;\n}\nfunction getHash(email){\n  email = (typeof email === 'string') ? email.trim().toLowerCase() : 'unspecified';\n  return email.match(MD5_REGEX) ? email : md5(email);\n}\n\nfunction getQueryString(options){\n  var queryData = querystring.stringify(params(options));\n  return (queryData && \"?\" + queryData) || \"\";\n}\n\nvar gravatar = module.exports = {\n\n    url: function (email, options, protocol) {\n      var baseURL = \"//www.gravatar.com/avatar/\";\n      if (options && options.cdn) {\n        baseURL = options.cdn + '/avatar/';\n        delete options.cdn;\n      } else {\n        if (options && options.protocol) protocol = proto(options);\n        if(typeof protocol !== 'undefined') {\n          baseURL = protocol ? \"https://s.gravatar.com/avatar/\" : 'http://www.gravatar.com/avatar/';\n        }\n      }\n      var query = getQueryString(options);\n      return baseURL + getHash(email) + query;\n    },\n\n    profile_url: function (email, options, https) {\n      var format = options != undefined && options.format != undefined ?  String(options.format) : 'json'\n      var baseURL\n      if (options && options.cdn) {\n        baseURL = options.cdn + '/';\n        delete options.cdn;\n      } else {\n        if (options && options.protocol) https = proto(options);\n        var baseURL = (https && \"https://secure.gravatar.com/\") || 'http://www.gravatar.com/';\n      }\n      var query = getQueryString(options);\n      return baseURL + getHash(email) + '.' + format + query;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}