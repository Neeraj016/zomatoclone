{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // Redux types\n\nimport { GET_IMAGE } from \"./Image.type\";\nexport var getImage = function getImage(_id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var Image;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/image/\".concat(_id)\n              });\n\n            case 3:\n              Image = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: GET_IMAGE,\n                payload: Image.data\n              }));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Redux/Reducer/Image/Image.action.js"],"names":["axios","GET_IMAGE","getImage","_id","dispatch","method","url","Image","type","payload","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA;AAAA,wEAAS,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAETJ,KAAK,CAAC;AACxBK,gBAAAA,MAAM,EAAE,KADgB;AAExBC,gBAAAA,GAAG,wCAAiCH,GAAjC;AAFqB,eAAD,CAFI;;AAAA;AAEvBI,cAAAA,KAFuB;AAAA,+CAOtBH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAEP,SAAR;AAAmBQ,gBAAAA,OAAO,EAAEF,KAAK,CAACG;AAAlC,eAAD,CAPc;;AAAA;AAAA;AAAA;AAAA,+CAStBN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import axios from \"axios\";\n\n// Redux types\nimport { GET_IMAGE } from \"./Image.type\";\n\nexport const getImage = (_id) => async (dispatch) => {\n  try {\n    const Image = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/image/${_id}`,\n    });\n\n    return dispatch({ type: GET_IMAGE, payload: Image.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};"]},"metadata":{},"sourceType":"module"}