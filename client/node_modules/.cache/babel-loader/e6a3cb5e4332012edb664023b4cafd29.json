{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neerajchettiar/Documents/FSWD/zomato-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // Redux types\n\nimport { GET_REVIEW, POST_REVIEW } from \"./review.type\";\nexport var getReviews = function getReviews(resId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var reviewList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios({\n                method: \"GET\",\n                url: \"http://localhost:4000/reviews/\".concat(resId)\n              });\n\n            case 3:\n              reviewList = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: GET_REVIEW,\n                payload: reviewList.data\n              }));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context.t0\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var postReviews = function postReviews(reviewData) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios({\n                method: \"POST\",\n                url: \"http://localhost:4000/reviews/new\",\n                data: {\n                  reviewData: reviewData\n                }\n              });\n\n            case 3:\n              return _context2.abrupt(\"return\", dispatch({\n                type: POST_REVIEW,\n                payload: reviewData\n              }));\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", dispatch({\n                type: \"ERROR\",\n                payload: _context2.t0\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 6]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/neerajchettiar/Documents/FSWD/zomato-master/client/src/Redux/Reducer/Reviews/review.action.js"],"names":["axios","GET_REVIEW","POST_REVIEW","getReviews","resId","dispatch","method","url","reviewList","type","payload","data","postReviews","reviewData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA;AAAA,wEAAW,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAERL,KAAK,CAAC;AAC7BM,gBAAAA,MAAM,EAAE,KADqB;AAE7BC,gBAAAA,GAAG,0CAAmCH,KAAnC;AAF0B,eAAD,CAFG;;AAAA;AAE3BI,cAAAA,UAF2B;AAAA,+CAO1BH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAER,UAAR;AAAoBS,gBAAAA,OAAO,EAAEF,UAAU,CAACG;AAAxC,eAAD,CAPkB;;AAAA;AAAA;AAAA;AAAA,+CAS1BN,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAaP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD;AAAA;AAAA,yEAAgB,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjCL,KAAK,CAAC;AACVM,gBAAAA,MAAM,EAAE,MADE;AAEVC,gBAAAA,GAAG,qCAFO;AAGVI,gBAAAA,IAAI,EAAE;AAAEE,kBAAAA,UAAU,EAAVA;AAAF;AAHI,eAAD,CAF4B;;AAAA;AAAA,gDAQhCR,QAAQ,CAAC;AACdI,gBAAAA,IAAI,EAAEP,WADQ;AAEdQ,gBAAAA,OAAO,EAAEG;AAFK,eAAD,CARwB;;AAAA;AAAA;AAAA;AAAA,gDAahCR,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAE,OAAR;AAAiBC,gBAAAA,OAAO;AAAxB,eAAD,CAbwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import axios from \"axios\";\n\n// Redux types\nimport { GET_REVIEW, POST_REVIEW } from \"./review.type\";\n\nexport const getReviews = (resId) => async (dispatch) => {\n  try {\n    const reviewList = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/reviews/${resId}`,\n    });\n\n    return dispatch({ type: GET_REVIEW, payload: reviewList.data });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};\n\nexport const postReviews = (reviewData) => async (dispatch) => {\n  try {\n    await axios({\n      method: \"POST\",\n      url: `http://localhost:4000/reviews/new`,\n      data: { reviewData },\n    });\n\n    return dispatch({\n      type: POST_REVIEW,\n      payload: reviewData,\n    });\n  } catch (error) {\n    return dispatch({ type: \"ERROR\", payload: error });\n  }\n};"]},"metadata":{},"sourceType":"module"}